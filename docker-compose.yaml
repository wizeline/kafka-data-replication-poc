# this file uses the confluent images
# see: https://github.com/authorjapps/zerocode-docker-factory/blob/master/compose/kafka-schema-registry.yml
# confluent platform docker images: https://github.com/confluentinc/cp-docker-images
version: "3"
services:
  pgsql-1:
    # postgresql://postgres:password@localhost:5432/database_1
    # image: postgres:9.6
    image: debezium/postgres:9.6
    ports:
      - 5432:5432
    volumes:
      - "./pgdata/1:/var/lib/postgresql/data"
      - "./config/postgresql.conf:/etc/postgresql/postgresql.conf"
    command: postgres -c 'config_file=/etc/postgresql/postgresql.conf'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=database_1
    restart: always

  pgsql-2:
    # postgresql://postgres:password@localhost:5433/database_2
    # image: postgres:9.6
    image: debezium/postgres:9.6
    ports:
      - 5433:5432
    volumes:
      - "./pgdata/2:/var/lib/postgresql/data"
      - "./config/postgresql.conf:/etc/postgresql/postgresql.conf"
    command: postgres -c 'config_file=/etc/postgresql/postgresql.conf'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=database_2
    restart: always

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:5.5.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:5.5.1
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  schema-registry:
    container_name: schema-registry
    image: confluentinc/cp-schema-registry:5.5.1
    depends_on:
      - kafka
      - zookeeper
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:2181
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    ports:
      - "8081:8081"

  rest-proxy:
    image: confluentinc/cp-kafka-rest:5.5.1
    depends_on:
      - zookeeper
      - kafka
      - schema-registry
    environment:
      KAFKA_REST_HOST_NAME: rest-proxy
      KAFKA_REST_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_REST_BOOTSTRAP_SERVERS: kafka:9092
      KAFKA_REST_LISTENERS: http://0.0.0.0:8082
      KAFKA_REST_SCHEMA_REGISTRY_URL: http://schema-registry:8081
    ports:
      - "8082:8082"

  ksql-server:
    # https://github.com/confluentinc/ksql
    container_name: ksql-server
    image: confluentinc/cp-ksql-server:5.4.2
    depends_on:
      - kafka
      - schema-registry
    environment:
      KSQL_BOOTSTRAP_SERVERS: kafka:9092
      KSQL_LISTENERS: http://0.0.0.0:8088
      KSQL_KSQL_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      KSQL_KSQL_SERVICE_ID: ksql-server

  connect:
    # https://hub.docker.com/r/debezium/connect
    # https://github.com/debezium/docker-images/blob/master/connect/1.3/Dockerfile
    container_name: connect
    build:
      args:
        - BASE_VERSION=1.3
      context: images/debezium-connect
    depends_on:
      - zookeeper
      - kafka
      - pgsql-1
      - pgsql-2
    ports:
      - "8083:8083"
    environment:
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: my-connect-configs
      OFFSET_STORAGE_TOPIC: my-connect-offsets
      ADVERTISED_HOST_NAME: connect
      BOOTSTRAP_SERVERS: kafka:9092
      CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
